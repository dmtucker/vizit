var GeoJSON={version:"0.1.0",equalPositions:function(e,r){return GeoJSON.isPosition(e)&&GeoJSON.isPosition(r)&&e.length==r.length&&e.every(function(t,o){return e[o]==r[o]})},isPosition:function(e){return Array.isArray(e)&&e.length>1&&e.every(function(e){return"number"==typeof e})},isMultiPoint:function(e){return Array.isArray(e)&&e.every(GeoJSON.isPosition)},isLineString:function(e){return Array.isArray(e)&&e.length>1&&GeoJSON.isMultiPoint(e)},isLinearRing:function(e){return Array.isArray(e)&&e.length>3&&GeoJSON.isLineString(e)&&GeoJSON.equalPositions(e[0],e[e.length-1])},isMultiLineString:function(e){return Array.isArray(e)&&e.every(GeoJSON.isLineString)},isPolygon:function(e){return Array.isArray(e)&&e.every(GeoJSON.isLinearRing)},isMultiPolygon:function(e){return Array.isArray(e)&&e.every(GeoJSON.isPolygon)},isGeometry:function(e){if(null==e)return!1;switch(e.type){case"Point":return GeoJSON.isPosition(e.coordinates);case"MultiPoint":return GeoJSON.isMultiPoint(e.coordinates);case"LineString":return GeoJSON.isLineString(e.coordinates);case"MultiLineString":return GeoJSON.isMultiLineString(e.coordinates);case"Polygon":return GeoJSON.isPolygon(e.coordinates);case"MultiPolygon":return GeoJSON.isMultiPolygon(e.coordinates);case"GeometryCollection":return GeoJSON.isGeometryCollection(e);default:return!1}},isGeometryCollection:function(e){return null!=e&&"GeometryCollection"===e.type&&Array.isArray(e.geometries)&&e.geometries.every(GeoJSON.isGeometry)},isFeature:function(e){return null!=e&&"Feature"===e.type&&(null===e.geometry||GeoJSON.isGeometry(e.geometry))&&"object"==typeof e.properties},isFeatureCollection:function(e){return null!=e&&"FeatureCollection"===e.type&&Array.isArray(e.features)&&e.features.every(GeoJSON.isFeature)},isGeoJSON:function(e){return GeoJSON.isGeometry(e)||GeoJSON.isFeature(e)||GeoJSON.isFeatureCollection(e)},isEmptyFeature:function(e){return GeoJSON.isFeature(e)&&null===e.geometry&&e.properties==={}},isEmptyFeatureCollection:function(e){return GeoJSON.isFeatureCollection(e)&&(0==e.features.length||e.features.every(GeoJSON.isEmptyFeature))},isEmptyGeometryCollection:function(e){return GeoJSON.isGeometryCollection(e)&&0==e.geometries.length},isEmpty:function(e){return GeoJSON.isEmptyFeature(e)||GeoJSON.isEmptyFeatureCollection(e)||GeoJSON.isEmptyGeometryCollection(e)},Point:function(e,r,t){var o=null;return"number"==typeof r&&"number"==typeof e&&(o={type:"Point",coordinates:[r,e]},"number"==typeof t&&o.coordinates.push(t)),o},Feature:function(e,r){var t={type:"Feature",geometry:null,properties:"object"==typeof r?r:{}};return GeoJSON.isGeometry(e)&&(t.geometry=e),t},FeatureCollection:function(e){var r={type:"FeatureCollection",features:[]};return GeoJSON.isFeature(e)?r.features.push(e):Array.isArray(e)&&e.forEach(function(e){GeoJSON.isFeature(e)&&r.features.push(e)}),r},GeometryCollection:function(e){var r={type:"GeometryCollection",geometries:[]};return GeoJSON.isGeometry(e)?r.geometries.push(e):Array.isArray(e)&&e.forEach(function(e){GeoJSON.isGeometry(e)&&r.geometries.push(e)}),r},features:function(e){var r=[];return GeoJSON.isFeatureCollection(e)?e.features.forEach(function(e){GeoJSON.features(e).forEach(function(e){r.push(e)})}):GeoJSON.isFeature(e)&&r.push(e),r},geometries:function(e){var r=[];return GeoJSON.isGeometryCollection(e)?e.geometries.forEach(function(e){GeoJSON.geometries(e).forEach(function(e){r.push(e)})}):GeoJSON.isGeometry(e)&&r.push(e),r}};
